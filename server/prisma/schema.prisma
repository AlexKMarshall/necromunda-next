// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Faction {
  id           String        @id @default(uuid())
  name         String        @unique
  fighterTypes FighterType[]
}

model FighterCategory {
  id           String        @id @default(uuid())
  name         String        @unique
  fighterTypes FighterType[]
}

model FighterType {
  id                String          @id @default(uuid())
  name              String          @unique
  faction           Faction         @relation(fields: [factionId], references: [id])
  factionId         String
  fighterCategory   FighterCategory @relation(fields: [fighterCategoryId], references: [id])
  fighterCategoryId String
  cost              Int
  fighterStats      FighterStats    @relation(fields: [fighterStatsId], references: [id])
  fighterStatsId    String
}

model FighterStats {
  id             String       @id @default(uuid())
  movement       Int
  weaponSkill    Int
  ballisticSkill Int
  strength       Int
  toughness      Int
  wounds         Int
  initiative     Int
  attacks        Int
  leadership     Int
  cool           Int
  will           Int
  intelligence   Int
  fighterType    FighterType?
}

model Weapon {
  id           String        @id @default(uuid())
  name         String        @unique
  weaponType   WeaponType    @relation(fields: [weaponTypeId], references: [id])
  weaponTypeId String
  weaponStats  WeaponStats[]
}

model WeaponType {
  id      String  @id @default(uuid())
  name    String  @unique
  weapons Weapon?
}

model WeaponStats {
  id                String                @id @default(uuid())
  description       String?
  rangeShort        Int?
  rangeLong         Int?
  accuracyShort     Int?
  accuracyLong      Int?
  strength          Int
  armourPenetration Int?
  damage            Int
  ammo              Int?
  traits            TraitsOnWeaponStats[]
  weapon            Weapon                @relation(fields: [weaponId], references: [id])
  weaponId          String
  isAmmo            Boolean               @default(false)
  isSoldSeparately  Boolean               @default(false)
}

model Trait {
  id          String                @id @default(uuid())
  name        String                @unique
  weaponStats TraitsOnWeaponStats[]
}

model TraitsOnWeaponStats {
  weaponStats   WeaponStats @relation(fields: [weaponStatsId], references: [id])
  weaponStatsId String
  trait         Trait       @relation(fields: [traitId], references: [id])
  traitId       String
  modifier      Int?

  @@id([weaponStatsId, traitId])
}
